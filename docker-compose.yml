services:
  web:
    build:
      context: ./backend/api # The root context where Dockerfile exists
      dockerfile: Dockerfile # Path to your Dockerfile
    ports:
      - "5050:5050" # Expose Flask on port 5050 for local development
    environment:
      - FLASK_ENV=development  # Override FLASK_ENV for development
    env_file:
      - path: ./backend/api/.env.docker
    depends_on:
      - db_dev
      - db_test  # Ensure both databases are started
    volumes:
      - ./backend/api/src:/app/src # Mount the src directory for live updates
      - ./backend/api/tests:/app/tests # Mount the tests directory for live updates
    networks:
      - homely-network # Shared network
    command: /bin/sh -c ".venv/bin/flask run --debug --host=0.0.0.0 --port=5050" # Overriding CMD for dev mode

  db_dev:
    image: postgres:16
    env_file:
      - path: ./backend/api/.env.docker
    environment:
      - POSTGRES_DB=homely
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - homely-network

  db_test:
    image: postgres:16
    env_file:
      - path: ./backend/api/.env.docker
    environment:
      - POSTGRES_DB=homely_test
    ports:
      - "5434:5432"  # Expose on a different host port to avoid conflicts
    volumes:
      - postgres_data_test:/var/lib/postgresql/data
    networks:
      - homely-network
volumes:
  postgres_data_dev:
  postgres_data_test: # Named volume for PostgreSQL persistence

networks:
  homely-network: # Shared network for both services
